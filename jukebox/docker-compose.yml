 

services:
  # Jukebox Rails application
  jukebox:
    build:
      context: .
      dockerfile: Dockerfile
    image: jukebox:latest
    restart: unless-stopped
    environment:
      RAILS_ENV: production
      APP_HOST: ${APP_HOST:-${HOSTNAME:-localhost}}
      APP_PROTOCOL: ${APP_PROTOCOL:-http}
      FORCE_SSL: ${FORCE_SSL:-false}
      ASSUME_SSL: ${ASSUME_SSL:-false}
      FORGERY_ORIGIN_CHECK: ${FORGERY_ORIGIN_CHECK:-false}
      ALLOW_ALL_HOSTS: ${ALLOW_ALL_HOSTS:-true}
      # Connect to Archive's PostgreSQL database
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${ARCHIVE_DB_HOST:-db}
      POSTGRES_PORT: ${ARCHIVE_DB_PORT:-5432}
      DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@${ARCHIVE_DB_HOST:-db}:${ARCHIVE_DB_PORT:-5432}/archive_production
      # Connect to Archive's Redis
      REDIS_HOST: ${ARCHIVE_REDIS_HOST:-redis}
      REDIS_PORT: ${ARCHIVE_REDIS_PORT:-6379}
      REDIS_DB: 1
      REDIS_URL: redis://${ARCHIVE_REDIS_HOST:-redis}:${ARCHIVE_REDIS_PORT:-6379}/1
      # Archive server URL for API calls
      ARCHIVE_SERVER_URL: ${ARCHIVE_SERVER_URL:-http://archive:3000}
      JUKEBOX_CLIENT_ID: ${JUKEBOX_CLIENT_ID:-jukebox-1}
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      RAILS_SERVE_STATIC_FILES: true
      RAILS_LOG_TO_STDOUT: true
      # Storage configuration - use Archive's storage
      STORAGE_ROOT: /rails/storage
      ACTIVE_STORAGE_SERVICE: ${ACTIVE_STORAGE_SERVICE:-local}
    ports:
      - "3001:3001"
    volumes:
      - jukebox_logs:/rails/log
      # Mount Archive's storage directory (absolute path required)
      - ${HOST_STORAGE_PATH}:/rails/storage:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/jukebox/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - archive_net

  # Host MPD preferred; no mpd container

  # Python Jukebox Player
  jukebox-player:
    build:
      context: ./audio_player
      dockerfile: Dockerfile
    image: jukebox-player:latest
    restart: unless-stopped
    depends_on:
      jukebox:
        condition: service_healthy
    environment:
      MPD_HOST: ${MPD_HOST:-host.docker.internal}
      MPD_PORT: 6600
      REDIS_HOST: ${ARCHIVE_REDIS_HOST:-redis}
      REDIS_PORT: ${ARCHIVE_REDIS_PORT:-6379}
      REDIS_DB: 1
      JUKEBOX_API_URL: ${JUKEBOX_API_URL:-http://jukebox:3001/api}
      JUKEBOX_LOG_FILE: /var/log/jukebox_player.log
    volumes:
      - jukebox_player_logs:/var/log
    healthcheck:
      test: ["CMD", "pgrep", "-f", "player.py"]
      interval: 30s
      timeout: 10s
      retries: 3
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - archive_net

volumes:
  jukebox_logs:
  jukebox_player_logs:

networks:
  archive_net:
    external: true
    name: archive_default