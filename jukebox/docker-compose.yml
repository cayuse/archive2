 
# -----------------------------------------------------------------------------
# Jukebox Docker Compose (Standalone Jukebox only)
# -----------------------------------------------------------------------------
# IMPORTANT ARCHITECTURE NOTES (READ BEFORE EDITING):
# - This file defines ONLY the Jukebox Rails app and the Python player.
# - It DOES NOT define Postgres or Redis. Jukebox connects to Archive's
#   Postgres and Redis over a shared, external Docker network named
#   `archive_default`, which is created by the Archive compose when it runs.
# - Services are discovered by name on that network:
#     - Postgres is reachable at `db:5432`
#     - Redis is reachable at `redis:6379`
#     - Archive app is reachable at `archive:3000`
# - Do NOT re-add local `db`, `redis`, or `mpd` services here; doing so will
#   create conflicts and break cross-stack connectivity.
# - Audio playback uses a HOST MPD (installed on Linux host). Preferred access
#   is via Unix socket `/run/mpd/socket` bind-mounted into the player container.
# - Audio files are NOT copied. Jukebox mounts the SAME host storage directory
#   used by Archive at `/rails/storage` (read-only). Set HOST_STORAGE_PATH.
# - Required environment variables (set on host before running deploy):
#     - RAILS_MASTER_KEY
#     - POSTGRES_PASSWORD          (must match Archive)
#     - HOST_STORAGE_PATH          (absolute path to Archive's storage)
#   Optional/testing flags (aligned with Archive):
#     - APP_HOST, APP_PROTOCOL, FORCE_SSL, ASSUME_SSL,
#       FORGERY_ORIGIN_CHECK, ALLOW_ALL_HOSTS
#   MPD options:
#     - MPD_SOCKET=/run/mpd/socket (recommended)
#     - or MPD_HOST/MPD_PORT (TCP fallback), and MPD_PASSWORD if set
# - Network dependency: Ensure the `archive_default` network exists. Start
#   Archive compose first or create it manually:
#     docker network ls | grep archive_default || docker network create archive_default
# -----------------------------------------------------------------------------

services:
  # Jukebox Rails application
  jukebox:
    # All configuration is provided via environment variables (no env files)
    build:
      context: .
      dockerfile: Dockerfile
    image: jukebox:latest
    restart: unless-stopped
    # Connects to Archive's external network; do NOT declare local db/redis/mpd here
    environment:
      RAILS_ENV: production
      # Host/SSL controls (match Archive behavior)
      APP_HOST: ${APP_HOST:-${HOSTNAME:-localhost}}
      APP_PROTOCOL: ${APP_PROTOCOL:-http}
      FORCE_SSL: ${FORCE_SSL:-false}
      ASSUME_SSL: ${ASSUME_SSL:-false}
      FORGERY_ORIGIN_CHECK: ${FORGERY_ORIGIN_CHECK:-false}
      ALLOW_ALL_HOSTS: ${ALLOW_ALL_HOSTS:-true}
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${ARCHIVE_DB_HOST:-db}
      POSTGRES_PORT: ${ARCHIVE_DB_PORT:-5432}
      DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@${ARCHIVE_DB_HOST:-db}:${ARCHIVE_DB_PORT:-5432}/archive_production
      REDIS_URL: redis://${ARCHIVE_REDIS_HOST:-redis}:${ARCHIVE_REDIS_PORT:-6379}/1
      REDIS_HOST: ${ARCHIVE_REDIS_HOST:-redis}
      REDIS_PORT: ${ARCHIVE_REDIS_PORT:-6379}
      REDIS_DB: 1
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      RAILS_SERVE_STATIC_FILES: true
      RAILS_LOG_TO_STDOUT: true
      # Storage configuration (mounts the same host directory used by Archive)
      STORAGE_ROOT: /rails/storage
      ACTIVE_STORAGE_SERVICE: ${ACTIVE_STORAGE_SERVICE:-local}
      # Archive sync configuration
      ARCHIVE_DB_HOST: ${ARCHIVE_DB_HOST:-db}
      ARCHIVE_DB_PORT: ${ARCHIVE_DB_PORT:-5432}
      ARCHIVE_REDIS_HOST: ${ARCHIVE_REDIS_HOST:-redis}
      ARCHIVE_REDIS_PORT: ${ARCHIVE_REDIS_PORT:-6379}
      ARCHIVE_STORAGE_ROOT: ${ARCHIVE_STORAGE_ROOT:-/rails/storage}
      # Python player HTTP API base for Rails proxy
      PLAYER_API_URL: ${PLAYER_API_URL:-http://jukebox-player:5000}
    ports:
      - "3001:3001"
    volumes:
      # Absolute host path to Archive storage; must be provided by HOST_STORAGE_PATH
      - ${HOST_STORAGE_PATH}:/rails/storage:ro
      - jukebox_logs:/rails/log
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/jukebox/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - archive_net

  # Host MPD preferred; no mpd container

  # Python Jukebox Player Controller

volumes:
  # Logs volume; storage is a bind mount via HOST_STORAGE_PATH
  jukebox_logs:

networks:
  # Shared network created by Archive compose. Required for service discovery.
  archive_net:
    external: true
    name: archive_default