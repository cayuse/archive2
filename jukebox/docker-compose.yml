 

services:
  # Jukebox Rails application
  jukebox:
    build:
      context: .
      dockerfile: Dockerfile
    image: jukebox:latest
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      RAILS_ENV: production
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_HOST: ${ARCHIVE_DB_HOST:-db}
      POSTGRES_PORT: ${ARCHIVE_DB_PORT:-5432}
      DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD:-password}@${ARCHIVE_DB_HOST:-db}:${ARCHIVE_DB_PORT:-5432}/jukebox_production
      REDIS_URL: redis://${ARCHIVE_REDIS_HOST:-redis}:${ARCHIVE_REDIS_PORT:-6379}/1
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      RAILS_SERVE_STATIC_FILES: true
      RAILS_LOG_TO_STDOUT: true
      # Storage configuration
      STORAGE_ROOT: ${STORAGE_ROOT:-/rails/storage}
      ACTIVE_STORAGE_SERVICE: ${ACTIVE_STORAGE_SERVICE:-local}
      # Player API configuration
      PLAYER_API_URL: http://jukebox-player:5000
      # Archive sync configuration
      ARCHIVE_SERVER_URL: ${ARCHIVE_SERVER_URL:-http://archive:3000}
      ARCHIVE_DB_HOST: ${ARCHIVE_DB_HOST:-archive-db}
      ARCHIVE_DB_PORT: ${ARCHIVE_DB_PORT:-5432}
      ARCHIVE_REDIS_HOST: ${ARCHIVE_REDIS_HOST:-archive-redis}
      ARCHIVE_REDIS_PORT: ${ARCHIVE_REDIS_PORT:-6379}
      ARCHIVE_STORAGE_PATH: ${ARCHIVE_STORAGE_PATH:-/archive_storage}
    ports:
      - "3001:80"
    volumes:
      - jukebox_storage:/rails/storage
      - jukebox_logs:/rails/log
      - ${ARCHIVE_STORAGE_PATH:-./archive_storage}:/archive_storage:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/jukebox/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - archive_net

  # Host MPD preferred; no mpd container

  # Python Jukebox Player Controller
  jukebox-player:
    build:
      context: ./audio_player
      dockerfile: Dockerfile
    image: jukebox-player:latest
    restart: unless-stopped
    depends_on:
      mpd:
        condition: service_started
      redis:
        condition: service_started
    environment:
      MPD_HOST: mpd
      MPD_PORT: 6600
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 1
      JUKEBOX_API_URL: http://jukebox:3001/api
      HTTP_PORT: 5000
    volumes:
      - jukebox_logs:/var/log
      - ./audio_player:/app:ro
    ports:
      - "5000:5000"  # Expose HTTP API port
    healthcheck:
      test: ["CMD", "pgrep", "-f", "player.py"]
      interval: 30s
      timeout: 10s
      retries: 3
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - archive_net

volumes:
  jukebox_logs:
  jukebox_player_logs:
  jukebox_storage:

networks:
  archive_net:
    external: true
    name: archive_default